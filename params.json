{"name":"Mtalk-intro-to-docker","tagline":"mtalk: intro to docker","body":"#Introduzione a docker\r\n\r\n\r\n\r\n##Cos'è docker?\r\n\r\nPrima definizione approssimativa: sistema di\r\nvirtualizzazione.  Non virtualizza l'hardware, ma la\r\nuserland.\r\n\r\n\r\n\r\n##Perché è stato creato\r\n\r\nPer risolvere il problema del deployare applicazioni.\r\ndocker standardizza un formato di container.\r\n\r\nLo sviluppatore si preoccupa di costruire un ambiente\r\nall'interno del quale la sua applicazione gira.\r\n\r\nIl sistemista prende il container creato e lo deploya sul\r\nserver.\r\n\r\n\r\n\r\n##Le entità nel mondo docker\r\n\r\n####Il container\r\n\r\nÈ l'ambiente di isolamento. Ha un filesystem suo, processi\r\nsuoi, interfacce network sue etc.\r\nÈ la \"combinazione\" di un'immagine e un processo.\r\n\r\n####L'immagine\r\n\r\nÈ un template read-only che descrive l'ambiente isolato.\r\nViene costruita attravero la compilazione di un\r\n`Dockerfile`.\r\n\r\n####Il Dockerfile\r\n\r\nÈ una lista di istruzioni per costruire un'immagine.\r\n\r\n\r\n\r\n##L'architettura di docker\r\n\r\n####Il demone docker\r\n\r\nAscolta su un socket (unix o tcp) e \"parla\" HTTP.\r\n\r\nEsempio: `GET /containers/json`\r\n\r\n####docker cli\r\n\r\nÈ l'interfaccia canonica sul demone.\r\n\r\nEsempio: `docker ps`\r\n\r\n####Il registro (pubblico) delle immagini\r\n\r\n[hub.docker.com](https://hub.docker.com)\r\n\r\n\r\n\r\n##Vantaggi e svantaggi\r\n\r\n####Vantaggi\r\n- Isolamento dei processi a basso costo\r\n- Universalità degli ambienti creati\r\n\r\n####Svantaggi\r\n- Tecnologia immatura (v1.2.0)\r\n- Ecosistema in sviluppo\r\n\r\n\r\n\r\n##Esempio\r\n\r\nSupponiamo che io voglia deployare un'applicazione node\r\n\"hello world\". Escludendo una soluzione di tipo PaaS,\r\nl'approccio tradizionale prevede i seguenti step:\r\n\r\n1. creare una macchina virtuale\r\n1. installare l'occorrente per far girare l'applicazione (in\r\n   questo caso nodejs)\r\n1. scaricare l'applicazione\r\n1. farla partire\r\n\r\nSupponiamo di voler far partire un'altra istanza\r\ndell'applicazione, ma con una configurazione diversa.\r\n\r\nCi sono due modi:\r\n\r\n- riutilizzare la macchina virtuale esistente\r\n- creare un'altra macchina virtuale\r\n\r\nIl più conveniente dal punto di vista della gestione è il\r\nsecondo, ma è un approccio costoso e lento.\r\n\r\nDocker in buona sostanza rende questo approccio economico e\r\nveloce.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}